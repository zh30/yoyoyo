name: ci

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up Ruby 3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
      
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: yarn
      
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_PASSWORD: ${{ secrets.NPM_PASSWORD }}
        run: |
          yarn release
      
      - name: Install Bundler
        run: |
          set -e
          gem install bundler
          bundle config path vendor/bundle
          bundle install
      
      - name: Jekyll Build
        run: |
          set -e
          bundle exec jekyll build
      
      - name: Build Gem file
        run: |
          set -e
          if test -e "./gphome/index.html";then
            echo "It builds!"
          else
            echo "Huh. That's odd. The example site doesn't seem to build."
            exit 1
          fi
      
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: gphome # The folder the action should deploy.
          CLEAN: true
          CLEAN_EXCLUDE: '["CNAME"]'
