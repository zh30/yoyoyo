<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh"><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="https://zhanghe.cool/feed.xml" rel="self" type="application/atom+xml" /><link href="https://zhanghe.cool/" rel="alternate" type="text/html" hreflang="zh" /><updated>2022-04-12T03:08:58+00:00</updated><id>https://zhanghe.cool/feed.xml</id><title type="html">yoyoyo</title><subtitle>Jekyll 主题 - yoyoyo</subtitle><author><name>{&quot;twitter&quot;=&gt;&quot;zhanghecool&quot;}</name></author><entry><title type="html">Hello, Welcome</title><link href="https://zhanghe.cool/blog/tutorial/rust/2020/02/14/hello.html" rel="alternate" type="text/html" title="Hello, Welcome" /><published>2020-02-14T00:00:00+00:00</published><updated>2020-02-14T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/rust/2020/02/14/hello</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/rust/2020/02/14/hello.html"><![CDATA[<h2 id="head_1">React Context Tutorial</h2>

<p>I give this plugin two :+1:!</p>

<p>_[another language]: It’s called Markdown
_[WTF]: What the fuck</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nx">isAwesome</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="RUST" /><category term="hot" /><category term="init" /><summary type="html"><![CDATA[这是我的第一个开源项目：Jekyll 主题 - YOYOYO]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Rust Cargo</title><link href="https://zhanghe.cool/blog/tutorial/rust/2019/06/19/rust-cargo.html" rel="alternate" type="text/html" title="Rust Cargo" /><published>2019-06-19T00:00:00+00:00</published><updated>2019-06-19T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/rust/2019/06/19/rust-cargo</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/rust/2019/06/19/rust-cargo.html"><![CDATA[<h2 id="rust-cargo-使用命令">RUST cargo 使用命令</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cargo <span class="nt">--version</span> // 查看 cargo 的版本
cargo build // 构建项目并运行它
cargo build <span class="nt">--release</span> // 优化编辑
cargo run // 执行项目
cargo check // 快速检查您的代码以确保它编译但不生成可执行文件

</code></pre></div></div>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="RUST" /><category term="hot" /><category term="init" /><summary type="html"><![CDATA[Cargo]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Git Rebash</title><link href="https://zhanghe.cool/blog/tutorial/2019/05/16/git-rebash.html" rel="alternate" type="text/html" title="Git Rebash" /><published>2019-05-16T00:00:00+00:00</published><updated>2019-05-16T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/2019/05/16/git-rebash</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/2019/05/16/git-rebash.html"><![CDATA[<h2 id="git-rebash-的操作流程">git rebash 的操作流程</h2>
<ul>
  <li>git rebase -i 《目标分支》</li>
  <li></li>
</ul>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="hot" /><category term="init" /><summary type="html"><![CDATA[Initialize website information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Git Password Question</title><link href="https://zhanghe.cool/blog/tutorial/2019/05/13/git-password-question.html" rel="alternate" type="text/html" title="Git Password Question" /><published>2019-05-13T00:00:00+00:00</published><updated>2019-05-13T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/2019/05/13/git-password-question</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/2019/05/13/git-password-question.html"><![CDATA[<h1 id="解决git操作时强制输入用户名密码的问题">解决git操作时强制输入用户名密码的问题</h1>
<ul>
  <li>首先进入自己项目的根目录</li>
  <li>输入下面的命令
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config <span class="nt">--global</span> credential.helper store
</code></pre></div>    </div>
  </li>
  <li>再一次输入要执行的git操作（第一次需要输入密码，以后就不需要了）</li>
</ul>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="yarn" /><category term="nvm" /><category term="node" /><summary type="html"><![CDATA[Initialize website information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Node Version Vscode</title><link href="https://zhanghe.cool/blog/tutorial/2019/05/05/node-version-vscode.html" rel="alternate" type="text/html" title="Node Version Vscode" /><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/2019/05/05/node-version-vscode</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/2019/05/05/node-version-vscode.html"><![CDATA[<h1 id="vs-code-在nvm下的nodejs版本控制问题">VS Code 在NVM下的Nodejs版本控制问题</h1>
<p>解决办法如下：</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm <span class="nb">alias </span>default 7.8.0
</code></pre></div></div>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="vscode" /><category term="nvm" /><category term="node-version" /><summary type="html"><![CDATA[Initialize website information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Nvm Yarn</title><link href="https://zhanghe.cool/blog/tutorial/2019/05/05/nvm-yarn.html" rel="alternate" type="text/html" title="Nvm Yarn" /><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/2019/05/05/nvm-yarn</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/2019/05/05/nvm-yarn.html"><![CDATA[<h1 id="error-invalid-option-without-node">Error: invalid option: –without-node</h1>
<p>当你用nvm的时候，安装yarn通常会执行这个命令：</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>yarn <span class="nt">--without-node</span>
</code></pre></div></div>
<p>但是<br />
目前（2019-05-05）在Mac系统下出现这个错误</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Error: invalid option: <span class="nt">--without-node</span>
</code></pre></div></div>
<p>解决办法直接解决这个就可以了：</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>yarn <span class="nt">--ignore-dependencies</span>
</code></pre></div></div>
<p>官方的解决办法是先正常安装yarn，然后在用brew强制覆盖yarn所带的node环境。</p>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="yarn" /><category term="nvm" /><category term="node" /><summary type="html"><![CDATA[Initialize website information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">&amp;amp;&amp;amp;||</title><link href="https://zhanghe.cool/blog/tutorial/2019/03/08/&&.html" rel="alternate" type="text/html" title="&amp;amp;&amp;amp;||" /><published>2019-03-08T00:00:00+00:00</published><updated>2019-03-08T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/2019/03/08/&amp;&amp;%7C%7C</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/2019/03/08/&amp;&amp;.html"><![CDATA[<h1 id="操作符和操作符">&amp;&amp;操作符和||操作符</h1>

<table>
  <tbody>
    <tr>
      <td>&amp;&amp; 在</td>
      <td> </td>
      <td>之前执行</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>&amp;&amp; 找假值</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td> </td>
          <td>找真值</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="hot" /><category term="init" /><summary type="html"><![CDATA[Initialize website information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Function Name</title><link href="https://zhanghe.cool/blog/tutorial/2019/03/08/function-name.html" rel="alternate" type="text/html" title="Function Name" /><published>2019-03-08T00:00:00+00:00</published><updated>2019-03-08T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/2019/03/08/function-name</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/2019/03/08/function-name.html"><![CDATA[<h2 id="函数命名">函数命名</h2>

<ul>
  <li>“get…” —— 返回值，</li>
  <li>“calc…” —— 计算</li>
  <li>“create…” —— 创建，</li>
  <li>“check…” —— 检查并返回 boolean 值</li>
  <li>“show…” —— 显示。</li>
</ul>

<h2 id="分解函数">分解函数</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">showPrimes</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isPrime</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span> <span class="k">continue</span><span class="p">;</span>

    <span class="nx">alert</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>  <span class="c1">// a prime</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">isPrime</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span> <span class="nx">n</span> <span class="o">%</span> <span class="nx">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="函数表达式">函数表达式</h2>

<ul>
  <li>在代码块的结尾是不需要 ;，像 if { … }，for { }，function f { } 等语法结构后面都不用加。</li>
  <li>函数表达式通常这样声明： let sayHi = …;，作为一个变量。 而不是代码块。不管什么值，建议在语句结尾处建议使用分号 ;。所以这里的分号与函数表达式本身没有任何关系，它只是终止了语句。</li>
</ul>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="hot" /><category term="init" /><summary type="html"><![CDATA[Initialize website information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Init</title><link href="https://zhanghe.cool/blog/tutorial/2019/02/22/init.html" rel="alternate" type="text/html" title="Init" /><published>2019-02-22T00:00:00+00:00</published><updated>2019-02-22T00:00:00+00:00</updated><id>https://zhanghe.cool/blog/tutorial/2019/02/22/init</id><content type="html" xml:base="https://zhanghe.cool/blog/tutorial/2019/02/22/init.html"><![CDATA[<h1 id="initialize-website-information">Initialize website information</h1>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm completion <span class="o">&gt;&gt;</span> ~/.bashrc
npm completion <span class="o">&gt;&gt;</span> ~/.zshrc
</code></pre></div></div>]]></content><author><name>hertz</name></author><category term="Blog" /><category term="Tutorial" /><category term="hot" /><category term="init" /><summary type="html"><![CDATA[Initialize website information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Welcome to zhangheorg!</title><link href="https://zhanghe.cool/blog/travel/2019/01/21/welcome.html" rel="alternate" type="text/html" title="Welcome to zhangheorg!" /><published>2019-01-21T08:47:27+00:00</published><updated>2019-01-21T08:47:27+00:00</updated><id>https://zhanghe.cool/blog/travel/2019/01/21/welcome</id><content type="html" xml:base="https://zhanghe.cool/blog/travel/2019/01/21/welcome.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>To add new posts, simply add a file in the <code class="language-plaintext highlighter-rouge">_posts</code> directory that follows the convention <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-name-of-post.ext</code> and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name>jill</name></author><category term="blog" /><category term="travel" /><category term="hot" /><category term="summer" /><summary type="html"><![CDATA[To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" /><media:content medium="image" url="https://cdn.jsdelivr.net/gh/zhanghecool/yoyoyo/assets/images/default.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>